/* eslint-disable prettier/prettier */
let result;
let serviceVertexIds = {};
let projectVertexIds = {};
let envVertexIds = {};
let serviceInstanceVertexIds = {};
result = db.collectionConfig.insertOne({"collection":"environment","index":0,"edges":[],"fields":{"name":{"type":"string"},"short":{"type":"string"}},"vertex":{"property":{"label":"collection::name"}}});
result = db.collectionConfig.insertOne({"collection":"project","index":1,"edges":[{"collection":"service","name":"component","relation":"oneToMany"}],"fields":{"name":{"type":"string"},"key":{"type":"string"},"configuration":{"type":"json"}},"vertex":{"property":{"label":"collection::name"}}});
result = db.collectionConfig.insertOne({"collection":"service","index":2,"edges":[{"collection":"serviceInstance","name":"instance","onDelete":"cascade","relation":"oneToMany"}],"fields":{"name":{"type":"string"},"configuration":{"type":"json"}},"vertex":{"property":{"label":"collection::name"}}});
result = db.collectionConfig.insertOne({"collection":"serviceInstance","index":3,"edges":[{"collection":"environment","name":"deploy-type","inboundName":"Instance","namePath":"instance","relation":"oneToOne"},{"collection":"serviceInstance","name":"requires","inboundName":"Required By","namePath":"instance","relation":"oneToMany"}],"fields":{"name":{"type":"string"},"key":{"type":"string"}},"vertex":{"property":{"label":"collection::name"}}});
// ==> App: knox
result = db.vertex.insertOne({"collection": "service", "name": "knox"});
serviceVertexIds['knox'] = result.insertedId;
result = db.service.insertOne({"name": "knox", "configuration":{"knox": {"appActorDefaults": {"approle":{"dev":["app-kv-read","app-kv-write","app-db-readwrite"],"test":["app-kv-read","app-kv-write","app-db-readwrite"],"prod":["app-kv-read","app-kv-write","app-db-readwrite"]},"developer":{"dev":["project-kv-read","project-kv-write","app-db-readwrite"],"test":["project-kv-read","app-db-read"]}}, "groups": [{"kv":"groups","name":"appdelivery","policies":["system/apps-kv-admin"]},{"kv":"groups","name":"midtier","policies":["apps/fluent/fluent-bit/prod-kv-read","apps/fluent/fluent-bit/prod-kv-write","apps/fluent/fluent-bit/prod-auth"]},{"kv":"groups","name":"dba","policies":["system/db-db-admin-super","system/apps-kv-admin"]},{"name":"oneteam","policies":["system/apps-kv-admin"]},{"kv":"groups","name":"optimize"},{"name":"vault-admin","policies":["system/admin-general"]},{"name":"vault-superadmin","policies":["system/admin-super"]},{"kv":"groups","name":"infraops","policies":[]},{"kv":"groups","name":"jira-admins","policies":[]},{"kv":"groups","name":"artifactory-admins","policies":[]},{"kv":"groups","name":"tier1","policies":[]},{"kv":"groups","name":"tier2","policies":[]},{"kv":"groups","name":"encora","policies":[]}], "db": [{"name":"edqa","type":"postgresql"}], "kv": ["apps","groups"]}}, "vertex": result.insertedId});
result = db.vertex.insertOne({"collection": "project", "name": "vault"});
projectVertexIds['vault'] = result.insertedId;
result = db.project.insertOne({"name": "vault", "key": "vault", "vertex": result.insertedId});
db.edge.insertOne({"name": "component", "st": [1, 2], "source": projectVertexIds["vault"], "target": serviceVertexIds["knox"]});
// ==> Env: PRODUCTION
result = db.vertex.insertOne({"collection": "environment", "name": "production"});
envVertexIds['production'] = result.insertedId;
result = db.environment.insertOne({"name": "production", "short": "prod", "vertex": result.insertedId});
result = db.vertex.insertOne({"collection": "serviceInstance", "name": "production"});
serviceInstanceVertexIds['knox:production'] = result.insertedId;
db.serviceInstance.insertOne({"name": "production", "key": "PRODUCTION", "vertex": result.insertedId});
db.edge.insertOne({"name": "instance", "st": [2, 3], "source": serviceVertexIds['knox'], "target": serviceInstanceVertexIds['knox:production']});
db.edge.insertOne({"name": "deploy-type", "st": [3, 0], "source": serviceInstanceVertexIds['knox:production'], "target": envVertexIds["production"]});
// ==> App: app-fidq
result = db.vertex.insertOne({"collection": "service", "name": "app-fidq"});
serviceVertexIds['app-fidq'] = result.insertedId;
result = db.service.insertOne({"name": "app-fidq", "configuration":{"knox": {"enabled":true}}, "vertex": result.insertedId});
result = db.vertex.insertOne({"collection": "project", "name": "fidq"});
projectVertexIds['fidq'] = result.insertedId;
result = db.project.insertOne({"name": "fidq", "key": "fidq", "vertex": result.insertedId});
db.edge.insertOne({"name": "component", "st": [1, 2], "source": projectVertexIds["fidq"], "target": serviceVertexIds["app-fidq"]});
// ==> Env: DEVELOPMENT
result = db.vertex.insertOne({"collection": "environment", "name": "development"});
envVertexIds['development'] = result.insertedId;
result = db.environment.insertOne({"name": "development", "short": "dev", "vertex": result.insertedId});
result = db.vertex.insertOne({"collection": "serviceInstance", "name": "development"});
serviceInstanceVertexIds['app-fidq:development'] = result.insertedId;
db.serviceInstance.insertOne({"name": "development", "key": "DEVELOPMENT", "vertex": result.insertedId});
db.edge.insertOne({"name": "instance", "st": [2, 3], "source": serviceVertexIds['app-fidq'], "target": serviceInstanceVertexIds['app-fidq:development']});
db.edge.insertOne({"name": "deploy-type", "st": [3, 0], "source": serviceInstanceVertexIds['app-fidq:development'], "target": envVertexIds["development"]});
db.edge.insertOne({"name": "requires", "st": [3, 3], "source": serviceInstanceVertexIds['app-fidq:development'], "target": serviceInstanceVertexIds["knox:production"]});
// ==> Env: TEST
result = db.vertex.insertOne({"collection": "environment", "name": "test"});
envVertexIds['test'] = result.insertedId;
result = db.environment.insertOne({"name": "test", "short": "test", "vertex": result.insertedId});
result = db.vertex.insertOne({"collection": "serviceInstance", "name": "test"});
serviceInstanceVertexIds['app-fidq:test'] = result.insertedId;
db.serviceInstance.insertOne({"name": "test", "key": "TEST", "vertex": result.insertedId});
db.edge.insertOne({"name": "instance", "st": [2, 3], "source": serviceVertexIds['app-fidq'], "target": serviceInstanceVertexIds['app-fidq:test']});
db.edge.insertOne({"name": "deploy-type", "st": [3, 0], "source": serviceInstanceVertexIds['app-fidq:test'], "target": envVertexIds["test"]});
db.edge.insertOne({"name": "requires", "st": [3, 3], "source": serviceInstanceVertexIds['app-fidq:test'], "target": serviceInstanceVertexIds["knox:production"]});
result = db.vertex.insertOne({"collection": "serviceInstance", "name": "production"});
serviceInstanceVertexIds['app-fidq:production'] = result.insertedId;
db.serviceInstance.insertOne({"name": "production", "key": "PRODUCTION", "vertex": result.insertedId});
db.edge.insertOne({"name": "instance", "st": [2, 3], "source": serviceVertexIds['app-fidq'], "target": serviceInstanceVertexIds['app-fidq:production']});
db.edge.insertOne({"name": "deploy-type", "st": [3, 0], "source": serviceInstanceVertexIds['app-fidq:production'], "target": envVertexIds["production"]});
db.edge.insertOne({"name": "requires", "st": [3, 3], "source": serviceInstanceVertexIds['app-fidq:production'], "target": serviceInstanceVertexIds["knox:production"]});
// ==> App: aws-automation
result = db.vertex.insertOne({"collection": "service", "name": "aws-automation"});
serviceVertexIds['aws-automation'] = result.insertedId;
result = db.service.insertOne({"name": "aws-automation", "configuration":{"knox": {"enabled":true,"approle":{"enabled":true}}}, "vertex": result.insertedId});
result = db.vertex.insertOne({"collection": "project", "name": "jenkins"});
projectVertexIds['jenkins'] = result.insertedId;
result = db.project.insertOne({"name": "jenkins", "key": "jenkins", "vertex": result.insertedId});
db.edge.insertOne({"name": "component", "st": [1, 2], "source": projectVertexIds["jenkins"], "target": serviceVertexIds["aws-automation"]});
result = db.vertex.insertOne({"collection": "serviceInstance", "name": "production"});
serviceInstanceVertexIds['aws-automation:production'] = result.insertedId;
db.serviceInstance.insertOne({"name": "production", "key": "PRODUCTION", "vertex": result.insertedId});
db.edge.insertOne({"name": "instance", "st": [2, 3], "source": serviceVertexIds['aws-automation'], "target": serviceInstanceVertexIds['aws-automation:production']});
db.edge.insertOne({"name": "deploy-type", "st": [3, 0], "source": serviceInstanceVertexIds['aws-automation:production'], "target": envVertexIds["production"]});
db.edge.insertOne({"name": "requires", "st": [3, 3], "source": serviceInstanceVertexIds['aws-automation:production'], "target": serviceInstanceVertexIds["knox:production"]});
// ==> App: cfsweb-db
result = db.vertex.insertOne({"collection": "service", "name": "cfsweb-db"});
serviceVertexIds['cfsweb-db'] = result.insertedId;
result = db.service.insertOne({"name": "cfsweb-db", "configuration":{"knox": {"enabled":true,"actor":{"developer":{"test":[]}}}}, "vertex": result.insertedId});
result = db.vertex.insertOne({"collection": "project", "name": "cfsweb"});
projectVertexIds['cfsweb'] = result.insertedId;
result = db.project.insertOne({"name": "cfsweb", "key": "CFSWEB", "vertex": result.insertedId});
db.edge.insertOne({"name": "component", "st": [1, 2], "source": projectVertexIds["cfsweb"], "target": serviceVertexIds["cfsweb-db"]});
result = db.vertex.insertOne({"collection": "serviceInstance", "name": "development"});
serviceInstanceVertexIds['cfsweb-db:development'] = result.insertedId;
db.serviceInstance.insertOne({"name": "development", "key": "DEVELOPMENT", "vertex": result.insertedId});
db.edge.insertOne({"name": "instance", "st": [2, 3], "source": serviceVertexIds['cfsweb-db'], "target": serviceInstanceVertexIds['cfsweb-db:development']});
db.edge.insertOne({"name": "deploy-type", "st": [3, 0], "source": serviceInstanceVertexIds['cfsweb-db:development'], "target": envVertexIds["development"]});
db.edge.insertOne({"name": "requires", "st": [3, 3], "source": serviceInstanceVertexIds['cfsweb-db:development'], "target": serviceInstanceVertexIds["knox:production"]});
result = db.vertex.insertOne({"collection": "serviceInstance", "name": "test"});
serviceInstanceVertexIds['cfsweb-db:test'] = result.insertedId;
db.serviceInstance.insertOne({"name": "test", "key": "TEST", "vertex": result.insertedId});
db.edge.insertOne({"name": "instance", "st": [2, 3], "source": serviceVertexIds['cfsweb-db'], "target": serviceInstanceVertexIds['cfsweb-db:test']});
db.edge.insertOne({"name": "deploy-type", "st": [3, 0], "source": serviceInstanceVertexIds['cfsweb-db:test'], "target": envVertexIds["test"]});
db.edge.insertOne({"name": "requires", "st": [3, 3], "source": serviceInstanceVertexIds['cfsweb-db:test'], "target": serviceInstanceVertexIds["knox:production"]});
result = db.vertex.insertOne({"collection": "serviceInstance", "name": "production"});
serviceInstanceVertexIds['cfsweb-db:production'] = result.insertedId;
db.serviceInstance.insertOne({"name": "production", "key": "PRODUCTION", "vertex": result.insertedId});
db.edge.insertOne({"name": "instance", "st": [2, 3], "source": serviceVertexIds['cfsweb-db'], "target": serviceInstanceVertexIds['cfsweb-db:production']});
db.edge.insertOne({"name": "deploy-type", "st": [3, 0], "source": serviceInstanceVertexIds['cfsweb-db:production'], "target": envVertexIds["production"]});
db.edge.insertOne({"name": "requires", "st": [3, 3], "source": serviceInstanceVertexIds['cfsweb-db:production'], "target": serviceInstanceVertexIds["knox:production"]});
// ==> App: edqa-war
result = db.vertex.insertOne({"collection": "service", "name": "edqa-war"});
serviceVertexIds['edqa-war'] = result.insertedId;
result = db.service.insertOne({"name": "edqa-war", "configuration":{"knox": {"enabled":true,"approle":{"enabled":true},"db":["edqa"]}}, "vertex": result.insertedId});
result = db.vertex.insertOne({"collection": "project", "name": "edqa"});
projectVertexIds['edqa'] = result.insertedId;
result = db.project.insertOne({"name": "edqa", "key": "EDQA", "vertex": result.insertedId});
db.edge.insertOne({"name": "component", "st": [1, 2], "source": projectVertexIds["edqa"], "target": serviceVertexIds["edqa-war"]});
result = db.vertex.insertOne({"collection": "serviceInstance", "name": "development"});
serviceInstanceVertexIds['edqa-war:development'] = result.insertedId;
db.serviceInstance.insertOne({"name": "development", "key": "DEVELOPMENT", "vertex": result.insertedId});
db.edge.insertOne({"name": "instance", "st": [2, 3], "source": serviceVertexIds['edqa-war'], "target": serviceInstanceVertexIds['edqa-war:development']});
db.edge.insertOne({"name": "deploy-type", "st": [3, 0], "source": serviceInstanceVertexIds['edqa-war:development'], "target": envVertexIds["development"]});
db.edge.insertOne({"name": "requires", "st": [3, 3], "source": serviceInstanceVertexIds['edqa-war:development'], "target": serviceInstanceVertexIds["knox:production"]});
result = db.vertex.insertOne({"collection": "serviceInstance", "name": "test"});
serviceInstanceVertexIds['edqa-war:test'] = result.insertedId;
db.serviceInstance.insertOne({"name": "test", "key": "TEST", "vertex": result.insertedId});
db.edge.insertOne({"name": "instance", "st": [2, 3], "source": serviceVertexIds['edqa-war'], "target": serviceInstanceVertexIds['edqa-war:test']});
db.edge.insertOne({"name": "deploy-type", "st": [3, 0], "source": serviceInstanceVertexIds['edqa-war:test'], "target": envVertexIds["test"]});
db.edge.insertOne({"name": "requires", "st": [3, 3], "source": serviceInstanceVertexIds['edqa-war:test'], "target": serviceInstanceVertexIds["knox:production"]});
result = db.vertex.insertOne({"collection": "serviceInstance", "name": "production"});
serviceInstanceVertexIds['edqa-war:production'] = result.insertedId;
db.serviceInstance.insertOne({"name": "production", "key": "PRODUCTION", "vertex": result.insertedId});
db.edge.insertOne({"name": "instance", "st": [2, 3], "source": serviceVertexIds['edqa-war'], "target": serviceInstanceVertexIds['edqa-war:production']});
db.edge.insertOne({"name": "deploy-type", "st": [3, 0], "source": serviceInstanceVertexIds['edqa-war:production'], "target": envVertexIds["production"]});
db.edge.insertOne({"name": "requires", "st": [3, 3], "source": serviceInstanceVertexIds['edqa-war:production'], "target": serviceInstanceVertexIds["knox:production"]});
// ==> App: ffs-db
result = db.vertex.insertOne({"collection": "service", "name": "ffs-db"});
serviceVertexIds['ffs-db'] = result.insertedId;
result = db.service.insertOne({"name": "ffs-db", "configuration":{"knox": {"enabled":true,"actor":{"developer":{"test":[]}}}}, "vertex": result.insertedId});
result = db.vertex.insertOne({"collection": "project", "name": "ffs"});
projectVertexIds['ffs'] = result.insertedId;
result = db.project.insertOne({"name": "ffs", "key": "FFS", "vertex": result.insertedId});
db.edge.insertOne({"name": "component", "st": [1, 2], "source": projectVertexIds["ffs"], "target": serviceVertexIds["ffs-db"]});
result = db.vertex.insertOne({"collection": "serviceInstance", "name": "development"});
serviceInstanceVertexIds['ffs-db:development'] = result.insertedId;
db.serviceInstance.insertOne({"name": "development", "key": "DEVELOPMENT", "vertex": result.insertedId});
db.edge.insertOne({"name": "instance", "st": [2, 3], "source": serviceVertexIds['ffs-db'], "target": serviceInstanceVertexIds['ffs-db:development']});
db.edge.insertOne({"name": "deploy-type", "st": [3, 0], "source": serviceInstanceVertexIds['ffs-db:development'], "target": envVertexIds["development"]});
db.edge.insertOne({"name": "requires", "st": [3, 3], "source": serviceInstanceVertexIds['ffs-db:development'], "target": serviceInstanceVertexIds["knox:production"]});
result = db.vertex.insertOne({"collection": "serviceInstance", "name": "test"});
serviceInstanceVertexIds['ffs-db:test'] = result.insertedId;
db.serviceInstance.insertOne({"name": "test", "key": "TEST", "vertex": result.insertedId});
db.edge.insertOne({"name": "instance", "st": [2, 3], "source": serviceVertexIds['ffs-db'], "target": serviceInstanceVertexIds['ffs-db:test']});
db.edge.insertOne({"name": "deploy-type", "st": [3, 0], "source": serviceInstanceVertexIds['ffs-db:test'], "target": envVertexIds["test"]});
db.edge.insertOne({"name": "requires", "st": [3, 3], "source": serviceInstanceVertexIds['ffs-db:test'], "target": serviceInstanceVertexIds["knox:production"]});
result = db.vertex.insertOne({"collection": "serviceInstance", "name": "production"});
serviceInstanceVertexIds['ffs-db:production'] = result.insertedId;
db.serviceInstance.insertOne({"name": "production", "key": "PRODUCTION", "vertex": result.insertedId});
db.edge.insertOne({"name": "instance", "st": [2, 3], "source": serviceVertexIds['ffs-db'], "target": serviceInstanceVertexIds['ffs-db:production']});
db.edge.insertOne({"name": "deploy-type", "st": [3, 0], "source": serviceInstanceVertexIds['ffs-db:production'], "target": envVertexIds["production"]});
db.edge.insertOne({"name": "requires", "st": [3, 3], "source": serviceInstanceVertexIds['ffs-db:production'], "target": serviceInstanceVertexIds["knox:production"]});
// ==> App: fluent-bit
result = db.vertex.insertOne({"collection": "service", "name": "fluent-bit"});
serviceVertexIds['fluent-bit'] = result.insertedId;
result = db.service.insertOne({"name": "fluent-bit", "configuration":{"knox": {"enabled":true,"approle":{"enabled":true,"secret_id_num_uses":5,"secret_id_ttl":60}}}, "vertex": result.insertedId});
result = db.vertex.insertOne({"collection": "project", "name": "fluent"});
projectVertexIds['fluent'] = result.insertedId;
result = db.project.insertOne({"name": "fluent", "key": "fluent", "vertex": result.insertedId});
db.edge.insertOne({"name": "component", "st": [1, 2], "source": projectVertexIds["fluent"], "target": serviceVertexIds["fluent-bit"]});
result = db.vertex.insertOne({"collection": "serviceInstance", "name": "production"});
serviceInstanceVertexIds['fluent-bit:production'] = result.insertedId;
db.serviceInstance.insertOne({"name": "production", "key": "PRODUCTION", "vertex": result.insertedId});
db.edge.insertOne({"name": "instance", "st": [2, 3], "source": serviceVertexIds['fluent-bit'], "target": serviceInstanceVertexIds['fluent-bit:production']});
db.edge.insertOne({"name": "deploy-type", "st": [3, 0], "source": serviceInstanceVertexIds['fluent-bit:production'], "target": envVertexIds["production"]});
db.edge.insertOne({"name": "requires", "st": [3, 3], "source": serviceInstanceVertexIds['fluent-bit:production'], "target": serviceInstanceVertexIds["knox:production"]});
// ==> App: fsbwhse-db
result = db.vertex.insertOne({"collection": "service", "name": "fsbwhse-db"});
serviceVertexIds['fsbwhse-db'] = result.insertedId;
result = db.service.insertOne({"name": "fsbwhse-db", "configuration":{"knox": {"enabled":true,"actor":{"developer":{"test":[]}}}}, "vertex": result.insertedId});
result = db.vertex.insertOne({"collection": "project", "name": "fsbwhse"});
projectVertexIds['fsbwhse'] = result.insertedId;
result = db.project.insertOne({"name": "fsbwhse", "key": "FSBWHSE", "vertex": result.insertedId});
db.edge.insertOne({"name": "component", "st": [1, 2], "source": projectVertexIds["fsbwhse"], "target": serviceVertexIds["fsbwhse-db"]});
result = db.vertex.insertOne({"collection": "serviceInstance", "name": "development"});
serviceInstanceVertexIds['fsbwhse-db:development'] = result.insertedId;
db.serviceInstance.insertOne({"name": "development", "key": "DEVELOPMENT", "vertex": result.insertedId});
db.edge.insertOne({"name": "instance", "st": [2, 3], "source": serviceVertexIds['fsbwhse-db'], "target": serviceInstanceVertexIds['fsbwhse-db:development']});
db.edge.insertOne({"name": "deploy-type", "st": [3, 0], "source": serviceInstanceVertexIds['fsbwhse-db:development'], "target": envVertexIds["development"]});
db.edge.insertOne({"name": "requires", "st": [3, 3], "source": serviceInstanceVertexIds['fsbwhse-db:development'], "target": serviceInstanceVertexIds["knox:production"]});
result = db.vertex.insertOne({"collection": "serviceInstance", "name": "test"});
serviceInstanceVertexIds['fsbwhse-db:test'] = result.insertedId;
db.serviceInstance.insertOne({"name": "test", "key": "TEST", "vertex": result.insertedId});
db.edge.insertOne({"name": "instance", "st": [2, 3], "source": serviceVertexIds['fsbwhse-db'], "target": serviceInstanceVertexIds['fsbwhse-db:test']});
db.edge.insertOne({"name": "deploy-type", "st": [3, 0], "source": serviceInstanceVertexIds['fsbwhse-db:test'], "target": envVertexIds["test"]});
db.edge.insertOne({"name": "requires", "st": [3, 3], "source": serviceInstanceVertexIds['fsbwhse-db:test'], "target": serviceInstanceVertexIds["knox:production"]});
result = db.vertex.insertOne({"collection": "serviceInstance", "name": "production"});
serviceInstanceVertexIds['fsbwhse-db:production'] = result.insertedId;
db.serviceInstance.insertOne({"name": "production", "key": "PRODUCTION", "vertex": result.insertedId});
db.edge.insertOne({"name": "instance", "st": [2, 3], "source": serviceVertexIds['fsbwhse-db'], "target": serviceInstanceVertexIds['fsbwhse-db:production']});
db.edge.insertOne({"name": "deploy-type", "st": [3, 0], "source": serviceInstanceVertexIds['fsbwhse-db:production'], "target": envVertexIds["production"]});
db.edge.insertOne({"name": "requires", "st": [3, 3], "source": serviceInstanceVertexIds['fsbwhse-db:production'], "target": serviceInstanceVertexIds["knox:production"]});
// ==> App: jenkins-isss
result = db.vertex.insertOne({"collection": "service", "name": "jenkins-isss"});
serviceVertexIds['jenkins-isss'] = result.insertedId;
result = db.service.insertOne({"name": "jenkins-isss", "configuration":{"knox": {"enabled":true,"approle":{"enabled":true},"policyOptions":{"systemPolicies":["system/isss-cdua-read","system/isss-ci-read","system/oraapp-imborapp-read"]}}}, "vertex": result.insertedId});
db.edge.insertOne({"name": "component", "st": [1, 2], "source": projectVertexIds["jenkins"], "target": serviceVertexIds["jenkins-isss"]});
result = db.vertex.insertOne({"collection": "serviceInstance", "name": "production"});
serviceInstanceVertexIds['jenkins-isss:production'] = result.insertedId;
db.serviceInstance.insertOne({"name": "production", "key": "PRODUCTION", "vertex": result.insertedId});
db.edge.insertOne({"name": "instance", "st": [2, 3], "source": serviceVertexIds['jenkins-isss'], "target": serviceInstanceVertexIds['jenkins-isss:production']});
db.edge.insertOne({"name": "deploy-type", "st": [3, 0], "source": serviceInstanceVertexIds['jenkins-isss:production'], "target": envVertexIds["production"]});
db.edge.insertOne({"name": "requires", "st": [3, 3], "source": serviceInstanceVertexIds['jenkins-isss:production'], "target": serviceInstanceVertexIds["knox:production"]});
// ==> App: jenkins-polaris
result = db.vertex.insertOne({"collection": "service", "name": "jenkins-polaris"});
serviceVertexIds['jenkins-polaris'] = result.insertedId;
result = db.service.insertOne({"name": "jenkins-polaris", "configuration":{"knox": {"enabled":true,"approle":{"enabled":true},"policyOptions":{"systemPolicies":["system/isss-cdua-read","system/isss-ci-read","system/oraapp-imborapp-read"]}}}, "vertex": result.insertedId});
db.edge.insertOne({"name": "component", "st": [1, 2], "source": projectVertexIds["jenkins"], "target": serviceVertexIds["jenkins-polaris"]});
result = db.vertex.insertOne({"collection": "serviceInstance", "name": "production"});
serviceInstanceVertexIds['jenkins-polaris:production'] = result.insertedId;
db.serviceInstance.insertOne({"name": "production", "key": "PRODUCTION", "vertex": result.insertedId});
db.edge.insertOne({"name": "instance", "st": [2, 3], "source": serviceVertexIds['jenkins-polaris'], "target": serviceInstanceVertexIds['jenkins-polaris:production']});
db.edge.insertOne({"name": "deploy-type", "st": [3, 0], "source": serviceInstanceVertexIds['jenkins-polaris:production'], "target": envVertexIds["production"]});
db.edge.insertOne({"name": "requires", "st": [3, 3], "source": serviceInstanceVertexIds['jenkins-polaris:production'], "target": serviceInstanceVertexIds["knox:production"]});
// ==> App: npe-cfsweb-db
result = db.vertex.insertOne({"collection": "service", "name": "npe-cfsweb-db"});
serviceVertexIds['npe-cfsweb-db'] = result.insertedId;
result = db.service.insertOne({"name": "npe-cfsweb-db", "configuration":{"knox": {"enabled":true,"approle":{"enabled":true}}}, "vertex": result.insertedId});
result = db.vertex.insertOne({"collection": "project", "name": "npe"});
projectVertexIds['npe'] = result.insertedId;
result = db.project.insertOne({"name": "npe", "key": "NPE", "vertex": result.insertedId});
db.edge.insertOne({"name": "component", "st": [1, 2], "source": projectVertexIds["npe"], "target": serviceVertexIds["npe-cfsweb-db"]});
result = db.vertex.insertOne({"collection": "serviceInstance", "name": "development"});
serviceInstanceVertexIds['npe-cfsweb-db:development'] = result.insertedId;
db.serviceInstance.insertOne({"name": "development", "key": "DEVELOPMENT", "vertex": result.insertedId});
db.edge.insertOne({"name": "instance", "st": [2, 3], "source": serviceVertexIds['npe-cfsweb-db'], "target": serviceInstanceVertexIds['npe-cfsweb-db:development']});
db.edge.insertOne({"name": "deploy-type", "st": [3, 0], "source": serviceInstanceVertexIds['npe-cfsweb-db:development'], "target": envVertexIds["development"]});
db.edge.insertOne({"name": "requires", "st": [3, 3], "source": serviceInstanceVertexIds['npe-cfsweb-db:development'], "target": serviceInstanceVertexIds["knox:production"]});
result = db.vertex.insertOne({"collection": "serviceInstance", "name": "test"});
serviceInstanceVertexIds['npe-cfsweb-db:test'] = result.insertedId;
db.serviceInstance.insertOne({"name": "test", "key": "TEST", "vertex": result.insertedId});
db.edge.insertOne({"name": "instance", "st": [2, 3], "source": serviceVertexIds['npe-cfsweb-db'], "target": serviceInstanceVertexIds['npe-cfsweb-db:test']});
db.edge.insertOne({"name": "deploy-type", "st": [3, 0], "source": serviceInstanceVertexIds['npe-cfsweb-db:test'], "target": envVertexIds["test"]});
db.edge.insertOne({"name": "requires", "st": [3, 3], "source": serviceInstanceVertexIds['npe-cfsweb-db:test'], "target": serviceInstanceVertexIds["knox:production"]});
result = db.vertex.insertOne({"collection": "serviceInstance", "name": "production"});
serviceInstanceVertexIds['npe-cfsweb-db:production'] = result.insertedId;
db.serviceInstance.insertOne({"name": "production", "key": "PRODUCTION", "vertex": result.insertedId});
db.edge.insertOne({"name": "instance", "st": [2, 3], "source": serviceVertexIds['npe-cfsweb-db'], "target": serviceInstanceVertexIds['npe-cfsweb-db:production']});
db.edge.insertOne({"name": "deploy-type", "st": [3, 0], "source": serviceInstanceVertexIds['npe-cfsweb-db:production'], "target": envVertexIds["production"]});
db.edge.insertOne({"name": "requires", "st": [3, 3], "source": serviceInstanceVertexIds['npe-cfsweb-db:production'], "target": serviceInstanceVertexIds["knox:production"]});
// ==> App: nr-broker
result = db.vertex.insertOne({"collection": "service", "name": "nr-broker"});
serviceVertexIds['nr-broker'] = result.insertedId;
result = db.service.insertOne({"name": "nr-broker", "configuration":{"knox": {"enabled":true,"approle":{"enabled":true},"policyOptions":{"systemPolicies":["apps/fluent/fluent-bit/prod-kv-read","system/admin-token","system/admin-audit-hash"]},"brokerFor":["app-client","app-spar","aws-automation","edqa-war","fluent-bit","fta-automatedb-datafix","jenkins-isss","jenkins-polaris","npe-cfsweb-db","rrs-automatedb-datafix","sncsc-automatedb-datafix","vsync"]}}, "vertex": result.insertedId});
db.edge.insertOne({"name": "component", "st": [1, 2], "source": projectVertexIds["vault"], "target": serviceVertexIds["nr-broker"]});
result = db.vertex.insertOne({"collection": "serviceInstance", "name": "production"});
serviceInstanceVertexIds['nr-broker:production'] = result.insertedId;
db.serviceInstance.insertOne({"name": "production", "key": "PRODUCTION", "vertex": result.insertedId});
db.edge.insertOne({"name": "instance", "st": [2, 3], "source": serviceVertexIds['nr-broker'], "target": serviceInstanceVertexIds['nr-broker:production']});
db.edge.insertOne({"name": "deploy-type", "st": [3, 0], "source": serviceInstanceVertexIds['nr-broker:production'], "target": envVertexIds["production"]});
db.edge.insertOne({"name": "requires", "st": [3, 3], "source": serviceInstanceVertexIds['nr-broker:production'], "target": serviceInstanceVertexIds["knox:production"]});
// ==> App: cwi-spi-dc-db
result = db.vertex.insertOne({"collection": "service", "name": "cwi-spi-dc-db"});
serviceVertexIds['cwi-spi-dc-db'] = result.insertedId;
result = db.service.insertOne({"name": "cwi-spi-dc-db", "configuration":{"knox": {"enabled":true}}, "vertex": result.insertedId});
result = db.vertex.insertOne({"collection": "project", "name": "spi"});
projectVertexIds['spi'] = result.insertedId;
result = db.project.insertOne({"name": "spi", "key": "SPI", "vertex": result.insertedId});
db.edge.insertOne({"name": "component", "st": [1, 2], "source": projectVertexIds["spi"], "target": serviceVertexIds["cwi-spi-dc-db"]});
result = db.vertex.insertOne({"collection": "serviceInstance", "name": "development"});
serviceInstanceVertexIds['cwi-spi-dc-db:development'] = result.insertedId;
db.serviceInstance.insertOne({"name": "development", "key": "DEVELOPMENT", "vertex": result.insertedId});
db.edge.insertOne({"name": "instance", "st": [2, 3], "source": serviceVertexIds['cwi-spi-dc-db'], "target": serviceInstanceVertexIds['cwi-spi-dc-db:development']});
db.edge.insertOne({"name": "deploy-type", "st": [3, 0], "source": serviceInstanceVertexIds['cwi-spi-dc-db:development'], "target": envVertexIds["development"]});
db.edge.insertOne({"name": "requires", "st": [3, 3], "source": serviceInstanceVertexIds['cwi-spi-dc-db:development'], "target": serviceInstanceVertexIds["knox:production"]});
result = db.vertex.insertOne({"collection": "serviceInstance", "name": "test"});
serviceInstanceVertexIds['cwi-spi-dc-db:test'] = result.insertedId;
db.serviceInstance.insertOne({"name": "test", "key": "TEST", "vertex": result.insertedId});
db.edge.insertOne({"name": "instance", "st": [2, 3], "source": serviceVertexIds['cwi-spi-dc-db'], "target": serviceInstanceVertexIds['cwi-spi-dc-db:test']});
db.edge.insertOne({"name": "deploy-type", "st": [3, 0], "source": serviceInstanceVertexIds['cwi-spi-dc-db:test'], "target": envVertexIds["test"]});
db.edge.insertOne({"name": "requires", "st": [3, 3], "source": serviceInstanceVertexIds['cwi-spi-dc-db:test'], "target": serviceInstanceVertexIds["knox:production"]});
result = db.vertex.insertOne({"collection": "serviceInstance", "name": "production"});
serviceInstanceVertexIds['cwi-spi-dc-db:production'] = result.insertedId;
db.serviceInstance.insertOne({"name": "production", "key": "PRODUCTION", "vertex": result.insertedId});
db.edge.insertOne({"name": "instance", "st": [2, 3], "source": serviceVertexIds['cwi-spi-dc-db'], "target": serviceInstanceVertexIds['cwi-spi-dc-db:production']});
db.edge.insertOne({"name": "deploy-type", "st": [3, 0], "source": serviceInstanceVertexIds['cwi-spi-dc-db:production'], "target": envVertexIds["production"]});
db.edge.insertOne({"name": "requires", "st": [3, 3], "source": serviceInstanceVertexIds['cwi-spi-dc-db:production'], "target": serviceInstanceVertexIds["knox:production"]});
// ==> App: vsync
result = db.vertex.insertOne({"collection": "service", "name": "vsync"});
serviceVertexIds['vsync'] = result.insertedId;
result = db.service.insertOne({"name": "vsync", "configuration":{"knox": {"enabled":true,"approle":{"enabled":true,"secret_id_num_uses":0,"secret_id_ttl":2592000,"token_period":600},"actor":{"approle":{"prod":["system/vault-sync"]}}}}, "vertex": result.insertedId});
db.edge.insertOne({"name": "component", "st": [1, 2], "source": projectVertexIds["vault"], "target": serviceVertexIds["vsync"]});
result = db.vertex.insertOne({"collection": "serviceInstance", "name": "production"});
serviceInstanceVertexIds['vsync:production'] = result.insertedId;
db.serviceInstance.insertOne({"name": "production", "key": "PRODUCTION", "vertex": result.insertedId});
db.edge.insertOne({"name": "instance", "st": [2, 3], "source": serviceVertexIds['vsync'], "target": serviceInstanceVertexIds['vsync:production']});
db.edge.insertOne({"name": "deploy-type", "st": [3, 0], "source": serviceInstanceVertexIds['vsync:production'], "target": envVertexIds["production"]});
db.edge.insertOne({"name": "requires", "st": [3, 3], "source": serviceInstanceVertexIds['vsync:production'], "target": serviceInstanceVertexIds["knox:production"]});
// ==> App: fta-automatedb-datafix
result = db.vertex.insertOne({"collection": "service", "name": "fta-automatedb-datafix"});
serviceVertexIds['fta-automatedb-datafix'] = result.insertedId;
result = db.service.insertOne({"name": "fta-automatedb-datafix", "configuration":{"knox": {"enabled":true,"approle":{"enabled":true},"actor":{"developer":{"test":[]}}}}, "vertex": result.insertedId});
result = db.vertex.insertOne({"collection": "project", "name": "fta"});
projectVertexIds['fta'] = result.insertedId;
result = db.project.insertOne({"name": "fta", "key": "FTA", "vertex": result.insertedId});
db.edge.insertOne({"name": "component", "st": [1, 2], "source": projectVertexIds["fta"], "target": serviceVertexIds["fta-automatedb-datafix"]});
result = db.vertex.insertOne({"collection": "serviceInstance", "name": "development"});
serviceInstanceVertexIds['fta-automatedb-datafix:development'] = result.insertedId;
db.serviceInstance.insertOne({"name": "development", "key": "DEVELOPMENT", "vertex": result.insertedId});
db.edge.insertOne({"name": "instance", "st": [2, 3], "source": serviceVertexIds['fta-automatedb-datafix'], "target": serviceInstanceVertexIds['fta-automatedb-datafix:development']});
db.edge.insertOne({"name": "deploy-type", "st": [3, 0], "source": serviceInstanceVertexIds['fta-automatedb-datafix:development'], "target": envVertexIds["development"]});
db.edge.insertOne({"name": "requires", "st": [3, 3], "source": serviceInstanceVertexIds['fta-automatedb-datafix:development'], "target": serviceInstanceVertexIds["knox:production"]});
result = db.vertex.insertOne({"collection": "serviceInstance", "name": "test"});
serviceInstanceVertexIds['fta-automatedb-datafix:test'] = result.insertedId;
db.serviceInstance.insertOne({"name": "test", "key": "TEST", "vertex": result.insertedId});
db.edge.insertOne({"name": "instance", "st": [2, 3], "source": serviceVertexIds['fta-automatedb-datafix'], "target": serviceInstanceVertexIds['fta-automatedb-datafix:test']});
db.edge.insertOne({"name": "deploy-type", "st": [3, 0], "source": serviceInstanceVertexIds['fta-automatedb-datafix:test'], "target": envVertexIds["test"]});
db.edge.insertOne({"name": "requires", "st": [3, 3], "source": serviceInstanceVertexIds['fta-automatedb-datafix:test'], "target": serviceInstanceVertexIds["knox:production"]});
result = db.vertex.insertOne({"collection": "serviceInstance", "name": "production"});
serviceInstanceVertexIds['fta-automatedb-datafix:production'] = result.insertedId;
db.serviceInstance.insertOne({"name": "production", "key": "PRODUCTION", "vertex": result.insertedId});
db.edge.insertOne({"name": "instance", "st": [2, 3], "source": serviceVertexIds['fta-automatedb-datafix'], "target": serviceInstanceVertexIds['fta-automatedb-datafix:production']});
db.edge.insertOne({"name": "deploy-type", "st": [3, 0], "source": serviceInstanceVertexIds['fta-automatedb-datafix:production'], "target": envVertexIds["production"]});
db.edge.insertOne({"name": "requires", "st": [3, 3], "source": serviceInstanceVertexIds['fta-automatedb-datafix:production'], "target": serviceInstanceVertexIds["knox:production"]});
// ==> App: rrs-automatedb-datafix
result = db.vertex.insertOne({"collection": "service", "name": "rrs-automatedb-datafix"});
serviceVertexIds['rrs-automatedb-datafix'] = result.insertedId;
result = db.service.insertOne({"name": "rrs-automatedb-datafix", "configuration":{"knox": {"enabled":true,"approle":{"enabled":true},"actor":{"developer":{"test":[]}}}}, "vertex": result.insertedId});
result = db.vertex.insertOne({"collection": "project", "name": "rrs"});
projectVertexIds['rrs'] = result.insertedId;
result = db.project.insertOne({"name": "rrs", "key": "RRS", "vertex": result.insertedId});
db.edge.insertOne({"name": "component", "st": [1, 2], "source": projectVertexIds["rrs"], "target": serviceVertexIds["rrs-automatedb-datafix"]});
result = db.vertex.insertOne({"collection": "serviceInstance", "name": "development"});
serviceInstanceVertexIds['rrs-automatedb-datafix:development'] = result.insertedId;
db.serviceInstance.insertOne({"name": "development", "key": "DEVELOPMENT", "vertex": result.insertedId});
db.edge.insertOne({"name": "instance", "st": [2, 3], "source": serviceVertexIds['rrs-automatedb-datafix'], "target": serviceInstanceVertexIds['rrs-automatedb-datafix:development']});
db.edge.insertOne({"name": "deploy-type", "st": [3, 0], "source": serviceInstanceVertexIds['rrs-automatedb-datafix:development'], "target": envVertexIds["development"]});
db.edge.insertOne({"name": "requires", "st": [3, 3], "source": serviceInstanceVertexIds['rrs-automatedb-datafix:development'], "target": serviceInstanceVertexIds["knox:production"]});
result = db.vertex.insertOne({"collection": "serviceInstance", "name": "test"});
serviceInstanceVertexIds['rrs-automatedb-datafix:test'] = result.insertedId;
db.serviceInstance.insertOne({"name": "test", "key": "TEST", "vertex": result.insertedId});
db.edge.insertOne({"name": "instance", "st": [2, 3], "source": serviceVertexIds['rrs-automatedb-datafix'], "target": serviceInstanceVertexIds['rrs-automatedb-datafix:test']});
db.edge.insertOne({"name": "deploy-type", "st": [3, 0], "source": serviceInstanceVertexIds['rrs-automatedb-datafix:test'], "target": envVertexIds["test"]});
db.edge.insertOne({"name": "requires", "st": [3, 3], "source": serviceInstanceVertexIds['rrs-automatedb-datafix:test'], "target": serviceInstanceVertexIds["knox:production"]});
result = db.vertex.insertOne({"collection": "serviceInstance", "name": "production"});
serviceInstanceVertexIds['rrs-automatedb-datafix:production'] = result.insertedId;
db.serviceInstance.insertOne({"name": "production", "key": "PRODUCTION", "vertex": result.insertedId});
db.edge.insertOne({"name": "instance", "st": [2, 3], "source": serviceVertexIds['rrs-automatedb-datafix'], "target": serviceInstanceVertexIds['rrs-automatedb-datafix:production']});
db.edge.insertOne({"name": "deploy-type", "st": [3, 0], "source": serviceInstanceVertexIds['rrs-automatedb-datafix:production'], "target": envVertexIds["production"]});
db.edge.insertOne({"name": "requires", "st": [3, 3], "source": serviceInstanceVertexIds['rrs-automatedb-datafix:production'], "target": serviceInstanceVertexIds["knox:production"]});
// ==> App: sncsc-automatedb-datafix
result = db.vertex.insertOne({"collection": "service", "name": "sncsc-automatedb-datafix"});
serviceVertexIds['sncsc-automatedb-datafix'] = result.insertedId;
result = db.service.insertOne({"name": "sncsc-automatedb-datafix", "configuration":{"knox": {"enabled":true,"approle":{"enabled":true},"actor":{"developer":{"test":[]}}}}, "vertex": result.insertedId});
result = db.vertex.insertOne({"collection": "project", "name": "sncsc"});
projectVertexIds['sncsc'] = result.insertedId;
result = db.project.insertOne({"name": "sncsc", "key": "SNCSC", "vertex": result.insertedId});
db.edge.insertOne({"name": "component", "st": [1, 2], "source": projectVertexIds["sncsc"], "target": serviceVertexIds["sncsc-automatedb-datafix"]});
result = db.vertex.insertOne({"collection": "serviceInstance", "name": "development"});
serviceInstanceVertexIds['sncsc-automatedb-datafix:development'] = result.insertedId;
db.serviceInstance.insertOne({"name": "development", "key": "DEVELOPMENT", "vertex": result.insertedId});
db.edge.insertOne({"name": "instance", "st": [2, 3], "source": serviceVertexIds['sncsc-automatedb-datafix'], "target": serviceInstanceVertexIds['sncsc-automatedb-datafix:development']});
db.edge.insertOne({"name": "deploy-type", "st": [3, 0], "source": serviceInstanceVertexIds['sncsc-automatedb-datafix:development'], "target": envVertexIds["development"]});
db.edge.insertOne({"name": "requires", "st": [3, 3], "source": serviceInstanceVertexIds['sncsc-automatedb-datafix:development'], "target": serviceInstanceVertexIds["knox:production"]});
result = db.vertex.insertOne({"collection": "serviceInstance", "name": "test"});
serviceInstanceVertexIds['sncsc-automatedb-datafix:test'] = result.insertedId;
db.serviceInstance.insertOne({"name": "test", "key": "TEST", "vertex": result.insertedId});
db.edge.insertOne({"name": "instance", "st": [2, 3], "source": serviceVertexIds['sncsc-automatedb-datafix'], "target": serviceInstanceVertexIds['sncsc-automatedb-datafix:test']});
db.edge.insertOne({"name": "deploy-type", "st": [3, 0], "source": serviceInstanceVertexIds['sncsc-automatedb-datafix:test'], "target": envVertexIds["test"]});
db.edge.insertOne({"name": "requires", "st": [3, 3], "source": serviceInstanceVertexIds['sncsc-automatedb-datafix:test'], "target": serviceInstanceVertexIds["knox:production"]});
result = db.vertex.insertOne({"collection": "serviceInstance", "name": "production"});
serviceInstanceVertexIds['sncsc-automatedb-datafix:production'] = result.insertedId;
db.serviceInstance.insertOne({"name": "production", "key": "PRODUCTION", "vertex": result.insertedId});
db.edge.insertOne({"name": "instance", "st": [2, 3], "source": serviceVertexIds['sncsc-automatedb-datafix'], "target": serviceInstanceVertexIds['sncsc-automatedb-datafix:production']});
db.edge.insertOne({"name": "deploy-type", "st": [3, 0], "source": serviceInstanceVertexIds['sncsc-automatedb-datafix:production'], "target": envVertexIds["production"]});
db.edge.insertOne({"name": "requires", "st": [3, 3], "source": serviceInstanceVertexIds['sncsc-automatedb-datafix:production'], "target": serviceInstanceVertexIds["knox:production"]});
// ==> App: app-spar
result = db.vertex.insertOne({"collection": "service", "name": "app-spar"});
serviceVertexIds['app-spar'] = result.insertedId;
result = db.service.insertOne({"name": "app-spar", "configuration":{"knox": {"enabled":true,"approle":{"enabled":true}}}, "vertex": result.insertedId});
result = db.vertex.insertOne({"collection": "project", "name": "spar"});
projectVertexIds['spar'] = result.insertedId;
result = db.project.insertOne({"name": "spar", "key": "SPAR", "vertex": result.insertedId});
db.edge.insertOne({"name": "component", "st": [1, 2], "source": projectVertexIds["spar"], "target": serviceVertexIds["app-spar"]});
result = db.vertex.insertOne({"collection": "serviceInstance", "name": "smtdelivery"});
serviceInstanceVertexIds['app-spar:smtdelivery'] = result.insertedId;
db.serviceInstance.insertOne({"name": "smtdelivery", "key": "SMTDELIVERY", "vertex": result.insertedId});
db.edge.insertOne({"name": "instance", "st": [2, 3], "source": serviceVertexIds['app-spar'], "target": serviceInstanceVertexIds['app-spar:smtdelivery']});
db.edge.insertOne({"name": "deploy-type", "st": [3, 0], "source": serviceInstanceVertexIds['app-spar:smtdelivery'], "target": envVertexIds["development"]});
db.edge.insertOne({"name": "requires", "st": [3, 3], "source": serviceInstanceVertexIds['app-spar:smtdelivery'], "target": serviceInstanceVertexIds["knox:production"]});
result = db.vertex.insertOne({"collection": "serviceInstance", "name": "smtproduction"});
serviceInstanceVertexIds['app-spar:smtproduction'] = result.insertedId;
db.serviceInstance.insertOne({"name": "smtproduction", "key": "SMTPRODUCTION", "vertex": result.insertedId});
db.edge.insertOne({"name": "instance", "st": [2, 3], "source": serviceVertexIds['app-spar'], "target": serviceInstanceVertexIds['app-spar:smtproduction']});
db.edge.insertOne({"name": "deploy-type", "st": [3, 0], "source": serviceInstanceVertexIds['app-spar:smtproduction'], "target": envVertexIds["production"]});
db.edge.insertOne({"name": "requires", "st": [3, 3], "source": serviceInstanceVertexIds['app-spar:smtproduction'], "target": serviceInstanceVertexIds["knox:production"]});
result = db.vertex.insertOne({"collection": "serviceInstance", "name": "smttest"});
serviceInstanceVertexIds['app-spar:smttest'] = result.insertedId;
db.serviceInstance.insertOne({"name": "smttest", "key": "SMTTEST", "vertex": result.insertedId});
db.edge.insertOne({"name": "instance", "st": [2, 3], "source": serviceVertexIds['app-spar'], "target": serviceInstanceVertexIds['app-spar:smttest']});
db.edge.insertOne({"name": "deploy-type", "st": [3, 0], "source": serviceInstanceVertexIds['app-spar:smttest'], "target": envVertexIds["test"]});
db.edge.insertOne({"name": "requires", "st": [3, 3], "source": serviceInstanceVertexIds['app-spar:smttest'], "target": serviceInstanceVertexIds["knox:production"]});
// ==> App: app-client
result = db.vertex.insertOne({"collection": "service", "name": "app-client"});
serviceVertexIds['app-client'] = result.insertedId;
result = db.service.insertOne({"name": "app-client", "configuration":{"knox": {"enabled":true,"approle":{"enabled":true},"actor":{"developer":{"test":[]}}}}, "vertex": result.insertedId});
result = db.vertex.insertOne({"collection": "project", "name": "client"});
projectVertexIds['client'] = result.insertedId;
result = db.project.insertOne({"name": "client", "key": "CLIENT", "vertex": result.insertedId});
db.edge.insertOne({"name": "component", "st": [1, 2], "source": projectVertexIds["client"], "target": serviceVertexIds["app-client"]});
result = db.vertex.insertOne({"collection": "serviceInstance", "name": "smtdelivery"});
serviceInstanceVertexIds['app-client:smtdelivery'] = result.insertedId;
db.serviceInstance.insertOne({"name": "smtdelivery", "key": "SMTDELIVERY", "vertex": result.insertedId});
db.edge.insertOne({"name": "instance", "st": [2, 3], "source": serviceVertexIds['app-client'], "target": serviceInstanceVertexIds['app-client:smtdelivery']});
db.edge.insertOne({"name": "deploy-type", "st": [3, 0], "source": serviceInstanceVertexIds['app-client:smtdelivery'], "target": envVertexIds["development"]});
db.edge.insertOne({"name": "requires", "st": [3, 3], "source": serviceInstanceVertexIds['app-client:smtdelivery'], "target": serviceInstanceVertexIds["knox:production"]});
result = db.vertex.insertOne({"collection": "serviceInstance", "name": "smtproduction"});
serviceInstanceVertexIds['app-client:smtproduction'] = result.insertedId;
db.serviceInstance.insertOne({"name": "smtproduction", "key": "SMTPRODUCTION", "vertex": result.insertedId});
db.edge.insertOne({"name": "instance", "st": [2, 3], "source": serviceVertexIds['app-client'], "target": serviceInstanceVertexIds['app-client:smtproduction']});
db.edge.insertOne({"name": "deploy-type", "st": [3, 0], "source": serviceInstanceVertexIds['app-client:smtproduction'], "target": envVertexIds["production"]});
db.edge.insertOne({"name": "requires", "st": [3, 3], "source": serviceInstanceVertexIds['app-client:smtproduction'], "target": serviceInstanceVertexIds["knox:production"]});
result = db.vertex.insertOne({"collection": "serviceInstance", "name": "smttest"});
serviceInstanceVertexIds['app-client:smttest'] = result.insertedId;
db.serviceInstance.insertOne({"name": "smttest", "key": "SMTTEST", "vertex": result.insertedId});
db.edge.insertOne({"name": "instance", "st": [2, 3], "source": serviceVertexIds['app-client'], "target": serviceInstanceVertexIds['app-client:smttest']});
db.edge.insertOne({"name": "deploy-type", "st": [3, 0], "source": serviceInstanceVertexIds['app-client:smttest'], "target": envVertexIds["test"]});
db.edge.insertOne({"name": "requires", "st": [3, 3], "source": serviceInstanceVertexIds['app-client:smttest'], "target": serviceInstanceVertexIds["knox:production"]});
